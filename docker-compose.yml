version: '3.3'
services:
  web:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: kiro-dev_php_74
    depends_on:
      - db
    volumes:
      - ./php:/var/www/html/
      - "./php/uploads:/var/www/html/uploads"
      - "/var/www/html/vendor"
    ports:
      - ${web_port}:80
    environment:
      - mysql_password=${mysql_password}
      - gmail_password=${gmail_password}
      - discord_link=${discord_link}
  websocket:
    build:
      context: ./node
      dockerfile: Dockerfile
    container_name: kiro-dev_node_12
    depends_on:
      - db
    ports:
      - ${websocket_port}:8080
    environment:
      - mysql_password=${mysql_password}
      - NODE_ENV=production
  db:
    container_name: kiro-dev_mysql8
    image: mysql:8.0.20
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${mysql_password}
      MYSQL_DATABASE: kiro
      MYSQL_USER: kiro_user
      MYSQL_PASSWORD: ${mysql_password}
    ports:
      - ${db_port}:3306
    volumes:
      - ./db_data:/var/lib/mysql
      - ./php/conf_server/init.sql:/docker-entrypoint-initdb.d/init.sql
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5
    restart: always
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: ${mysql_password}
    ports:
      - ${phpmyadmin_port}:80
    depends_on:
      - db 
  webinstaller:
    build:
      context: ./webinstaller
    container_name: kiro-dev_webinstaller_0
    depends_on:
      - db
    environment:
      - mysql_password=${mysql_password}
  webtest:
    build:
      context: ./webtest
    container_name: kiro-dev_webtest_0
    depends_on:
      - db
    environment:
      - mysql_password=${mysql_password}
